server {
    listen 443 ssl;
    server_name whenlymeet.com;

    ssl_certificate     /etc/letsencrypt/live/whenlymeet.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/whenlymeet.com/privkey.pem;

    root /usr/share/nginx/html;
    index index.html;

    # Proxy API requests to backend
    location /api/ {
        proxy_pass http://backend:5000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Event pages — rewrite crawlers internally
    location ~ ^/e/([a-f0-9-]+)$ {
        # Crawlers → internal location
        if ($http_user_agent ~* (facebookexternalhit|twitterbot|discordbot|whatsapp|telegrambot|skypeuripreview|slackbot|linkedinbot|googlebot|bingbot|applebot|preview|crawler|bot)) {
            rewrite ^ /__crawler$request_uri last;
        }

        # Humans → SPA
        try_files $uri /index.html;
    }

    # Internal location for crawlers
    location ~ ^/__crawler/e/([a-f0-9-]+)$ {
        proxy_pass http://backend:5000$request_uri;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Debug endpoint
    location /debug-crawler {
        add_header Content-Type text/plain;
        return 200 "UA: $http_user_agent\n";
    }

    # Favicon
    location = /favicon.png {
        root /usr/share/nginx/html;
        log_not_found off;
        access_log off;
    }

    # Robots.txt
    location = /robots.txt {
        root /usr/share/nginx/html;
        log_not_found off;
        access_log off;
    }

    # All other routes → SPA
    location / {
        try_files $uri /index.html;
    }

}

server {
    listen 80;
    server_name whenlymeet.com;
    return 301 https://$host$request_uri;
}
